我们课题的一个创新点是以程序而非用户作为访问控制策略的主体。
首先，我们将同一个程序的可执行文件归为程序组。
比如QQ中就有主进程、更新进程、以及其他一些辅助进程。我们就将其归为QQ这样一个程序组。
(pass)
一些程序组拥有相似功能，其行为也是相似的，我们将这些程序组的归为程序角色。
比如QQ和MSN作为同样的网络聊天应用程序，其访问网络的行为也是相似的。
(pass)
从而，对于主体进程，我们将根据其程序组、程序角色、执行用户的权限以及其他系统策略等方面来制定访问控制策略。
我们课题的另一个创新点是将主体过去访问历史作为访问控制在策略的参考对象，智能化地生成访问控制规则。
(pass)
我们这么做的原因主要有以下几点。
首先，利用主体访问历史可以有效地解决主体访问时的冲突。
在本系统中，主体并非用户而是进程。而与此同时，Windows作为闭源操作系统，许多应用程序无法了解其内在调用机制。
考虑到系统的实用性，我们将原来的BLP模型修改为等级临时上调，通过询问用户或者智能化判断来减少冲突。
比如：我想不出例子。。。
(pass)
同时，利用主体访问历史可以智能化地生成规则。
无论是应用程序还是恶意软件，其行为都是有规律的。
我们利用主体访问历史通过机器学习等相应的人工智能算法就可以智能地生成访问控制规则。
在必要时向用户提供推荐的处理建议，从而有效地增强系统的有效性、实用性和友好性。
(pass)
对于访问控制的客体对象，主要是文件。同样也包括注册表等其他系统关键信息。
(pass)
以下就是我们的后台客户端界面。通过管理员的配置，可以方便地通过网络部署在客户计算机上。

PS:我觉得太长了。。。
望修改
